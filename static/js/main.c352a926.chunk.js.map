{"version":3,"sources":["reportWebVitals.js","components/Randomizer/Randomizer.style.js","components/Randomizer/Randomizer.jsx","components/StudentLoader/StudentLoader.style.js","components/StudentLoader/StudentLoader.jsx","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","RandomizerContainer","styled","div","RandomizerHeader","RandomizerButtons","RandomizerRoundedButton","RandomizerCountButtons","RandomizerBinButton","RandomizerResult","RandomizerResultCard","RandomizerResultCardHeader","h2","Randomizer","students","setStudents","useState","groupNumber","setGroupNumber","result","setResult","shuffle","suffleStudent","sort","a","b","Math","random","numsPerGroup","ceil","length","i","slice","push","useEffect","onClick","className","map","group","key","student","StudentLoaderContainer","StudentLoaderTitle","h1","StudentLoaderSubTitle","p","StudentLoaderError","StudentLoader","error","setError","onFileLoaded","data","includes","filter","index","App","JSON","parse","localStorage","getItem","setItem","stringify","removeItem","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c352a926.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import styled from 'styled-components';\n\nexport const RandomizerContainer = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const RandomizerHeader = styled.div`\n  user-select: none;\n  height: 20vh;\n  width: 100vw;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  background-color: var(--primary-color);\n`;\n\nexport const RandomizerButtons = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-around;\n`;\n\nexport const RandomizerRoundedButton = styled.div`\n  background-color: white;\n  border-radius: 3em;\n  padding: 10px;\n  cursor: pointer;\n  display: flex;\n`;\n\nexport const RandomizerCountButtons = styled(RandomizerRoundedButton)`\n  display: flex;\n  align-items: center;\n  & div:nth-child(1), & div:nth-child(3) {\n    cursor: pointer;\n    margin: 0 5px;\n  }\n  & div:nth-child(2) {\n    font-weight: bold;\n    margin: 0 5px;\n  }\n`;\n\nexport const RandomizerBinButton = styled(RandomizerRoundedButton)`\n  position: absolute;\n  right: 2em;\n`;\n\nexport const RandomizerResult = styled.div`\n  text-align: center;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 2em;\n  overflow: scroll;\n  `;\n  \nexport const RandomizerResultCard = styled.div`\n  margin: 2em;\n  box-shadow: 0 1em 1em 0 rgb(0 0 0 / 10%);\n  border-radius: 0 0 0.5em 0.5em;\n  width: 300px;\n`;\n\nexport const RandomizerResultCardHeader = styled.h2`\n  background-color: var(--primary-color);\n  border-radius: 0.3em 0.3em 0 0;\n  padding: 1em 2em;\n  color: white;\n  margin: 0;\n`;\n","import { useEffect, useState } from 'react';\nimport {\n  HiRefresh,\n  HiOutlineMinus,\n  HiOutlinePlus,\n  HiTrash\n} from 'react-icons/hi';\nimport {\n  RandomizerRoundedButton,\n  RandomizerCountButtons,\n  RandomizerButtons,\n  RandomizerContainer,\n  RandomizerHeader,\n  RandomizerBinButton,\n  RandomizerResult,\n  RandomizerResultCard,\n  RandomizerResultCardHeader,\n} from './Randomizer.style';\n\nconst Randomizer = ({ students, setStudents }) => {\n  const [groupNumber, setGroupNumber] = useState(1);\n  const [result, setResult] = useState([]);\n\n  const minorGroupNumber = () => {\n    if (groupNumber > 1) setGroupNumber(groupNumber - 1)\n  }\n\n  const majorGroupNumber = () => {\n    setGroupNumber(groupNumber + 1)\n  }\n\n  const shuffle = () => {\n    const suffleStudent = students.sort((a, b) => 0.5 - Math.random());\n    const numsPerGroup = Math.ceil(suffleStudent.length / groupNumber);\n    const result = [];\n    for (let i = 0; i < groupNumber; i++) {\n      const group = suffleStudent.slice(i * numsPerGroup, (i + 1) * numsPerGroup);\n      if (group.length) result.push(\n        suffleStudent.slice(i * numsPerGroup, (i + 1) * numsPerGroup)\n      );\n    }\n    setResult(result)\n  }\n\n  useEffect(shuffle, [groupNumber])\n\n  return (\n    <RandomizerContainer>\n      <RandomizerHeader>\n        <RandomizerButtons>\n          <RandomizerCountButtons>\n            <div onClick={minorGroupNumber}><HiOutlineMinus /></div>\n            <div>{groupNumber}</div>\n            <div onClick={majorGroupNumber}><HiOutlinePlus /></div>\n          </RandomizerCountButtons>\n          <RandomizerRoundedButton onClick={shuffle}><HiRefresh /></RandomizerRoundedButton>\n        </RandomizerButtons>\n        <RandomizerBinButton className=\"Randomizer-bin\" onClick={() => setStudents(null)}><HiTrash /></RandomizerBinButton>\n      </RandomizerHeader>\n      <RandomizerResult>\n        {result\n          .map((group, key) => (\n            <RandomizerResultCard key={key}>\n              <RandomizerResultCardHeader>{`Groupe ${key+1}`}</RandomizerResultCardHeader>\n              { group.map((student, key) => (\n                <p key={key}>{student}</p>\n              )) }\n            </RandomizerResultCard>\n          ))\n        }\n      </RandomizerResult>\n    </RandomizerContainer>\n  );\n}\n\nexport default Randomizer;\n","import styled from 'styled-components';\n\nexport const StudentLoaderContainer = styled.div`\nheight: 100vh;\nwidth: 100vw;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\njustify-content: center;\nbackground-color: var(--primary-color);\ncolor: white;\n`;\n\nexport const StudentLoaderTitle = styled.h1`\n  text-shadow: 1px 1px 1px black;\n  font-size: 4em;\n`;\n\nexport const StudentLoaderSubTitle = styled.p`\n  text-shadow: 1px 1px 1px black;\n  font-size: 2em;\n`;\n\nexport const StudentLoaderError = styled.p`\n  position: absolute;\n  left: 50%;\n  transform: translate(-50%);\n  top: 10;\n  color: var(--error-color);\n  padding: 1em;\n  background-color: white;\n  border-radius: 1em;\n`;\n","import { useState } from 'react';\nimport CSVReader from 'react-csv-reader'\nimport {\n  StudentLoaderContainer,\n  StudentLoaderError,\n  StudentLoaderSubTitle,\n  StudentLoaderTitle,\n} from './StudentLoader.style';\n\nconst StudentLoader = ({ setStudents }) => {\n  const [error, setError] = useState(null);\n\n  const handleCSV = (data) => {\n    setError(null);\n    if (!data[0].includes('firstname', 'lastname')) {\n      return setError('bad CSV');\n    }\n    const students = data\n      .filter((student, index) => {\n        if (index === 0) return false;\n        if (student[0] === '') return false;\n        return true;\n      })\n      .map((student) => `${student[0]} ${student[1]}`);\n    setStudents(students);\n  }\n\n  return(\n    <>\n      { error && <StudentLoaderError>{ error }</StudentLoaderError> }\n      <StudentLoaderContainer>\n        <StudentLoaderTitle>Student Random</StudentLoaderTitle>\n        <StudentLoaderSubTitle>Load your team CSV here</StudentLoaderSubTitle>\n        <CSVReader onFileLoaded={handleCSV} />\n      </StudentLoaderContainer>\n    </>\n  )\n};\n\nexport default StudentLoader;\n","import { useEffect, useState } from 'react';\nimport Randomizer from './components/Randomizer/Randomizer';\nimport StudentLoader from './components/StudentLoader/StudentLoader';\n\nconst App = () => {\n  const [students, setStudents] = useState(\n    JSON.parse(localStorage.getItem('students'))\n  );\n\n  useEffect(() => {\n    if (students) {\n      localStorage.setItem('students', JSON.stringify(students));\n    } else {\n      localStorage.removeItem('students');\n    }\n  }, [students])\n\n  return (\n    students\n      ? <Randomizer students={students} setStudents={setStudents} />\n      : <StudentLoader setStudents={setStudents} />\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport App from './App';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}